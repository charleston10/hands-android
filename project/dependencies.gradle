ext {
    kotlin = '1.1.3'
    support = '26.1.0'
    gson = '2.5'
    espresso = '3.0.1'
    test = '1.0.1'
    mockito = '1.10.19'
    rxJava = '2.1.0'
    rxKotlin = '0.55.0'
    rxAndroid = '2.0.1'
    rxAppState = '2.0.0'
    jUnit = '4.12'
    mockitoKotlin = '0.7.0'
    multiDex = '1.0.1'
    retrofit = '2.3.0'
    okHttp3 = '3.1.2'
    squareConverterGson = '2.1.0'
    mockitoWebServer = '3.8.0'
    androidArchitecture = '1.0.0-beta1'
    timber = '4.5.1'
    dagger = '2.11'
    robolectric = '3.4.2'
    robolectricAnnotations = '3.0'
    robolectricSupport = '3.0'

    dependencies = [
            androidKotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin",
            support                   : "com.android.support:support-v4:$support",
            supportAppCompact         : "com.android.support:appcompat-v7:$support",
            supportVectorDrawable     : "com.android.support:support-vector-drawable:$support",
            supportCardView           : "com.android.support:cardview-v7:$support",
            supportDesign             : "com.android.support:design:$support",
            supportV4                 : "com.android.support:support-v4:$support",
            supportMultiDex           : "com.android.support:multidex:$multiDex",

            testEspressoCore          : "com.android.support.test.espresso:espresso-core:$espresso",
            testEspressoIntents       : "com.android.support.test.espresso:espresso-intents:$espresso",
            testRules                 : "com.android.support.test:rules:$test",
            testRunner                : "com.android.support.test:runner:$test",
            testMockito               : "org.mockito:mockito-core:$mockito",
            testMockitoKoltin         : "com.nhaarman:mockito-kotlin:$mockitoKotlin",
            testJUnit                 : "junit:junit:$jUnit",
            testMockitoWebServer      : "com.squareup.okhttp3:mockwebserver:$mockitoWebServer",
            testRobolectric           : "org.robolectric:robolectric:$robolectric",
            testRobolectricAnnotations: "org.robolectric:robolectric-annotations:$robolectricAnnotations",
            testRobolectricSupport    : "org.robolectric:shadows-support-v4:$robolectricSupport",

            rxJava                    : "io.reactivex.rxjava2:rxjava:$rxJava",
            rxKotlin                  : "io.reactivex:rxkotlin:$rxKotlin",
            rxAndroid                 : "io.reactivex.rxjava2:rxandroid:$rxAndroid",

            googleGson                : "com.google.code.gson:gson:$gson",
            squareOkHttp              : "com.squareup.okhttp3:okhttp:$okHttp3",
            squareLogging             : "com.squareup.okhttp3:logging-interceptor:$okHttp3",
            squareRetrofit            : "com.squareup.retrofit2:retrofit:$retrofit",
            squareRxAdapter           : "com.squareup.retrofit2:adapter-rxjava2:$retrofit",
            squareConverterGson       : "com.squareup.retrofit2:converter-gson:$squareConverterGson",

            logTimber                 : "com.jakewharton.timber:timber:$timber",

            daggerCompiler            : "com.google.dagger:dagger-compiler:$dagger",
            daggerCompiler            : "com.google.dagger:dagger-compiler:$dagger",
            dagger                    : "com.google.dagger:dagger:$dagger",
            daggerAndroid             : "com.google.dagger:dagger-android:$dagger",
            daggerAndroidSupport      : "com.google.dagger:dagger-android-support:$dagger",
            daggerAndroidProcessor    : "com.google.dagger:dagger-android-processor:$dagger",

            lifecycle                 : "android.arch.lifecycle:extensions:$androidArchitecture",
            lifecycleCompiler         : "android.arch.lifecycle:compiler:$androidArchitecture"
    ]
}